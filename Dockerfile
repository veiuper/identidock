# FROM python:3.4
FROM python
# Создание группы и пользователя uwsgi с помощью штатных средств Unix.
RUN groupadd -r uwsgi && useradd -r -g uwsgi uwsgi
# Добавление uWSGI в список устанавливаемых пакетов Python.
# RUN pip install Flask==0.10.1 uWSGI==2.0.8 requests==2.5.1 redis==2.10.3
# Добавляется библиотека requests, используемая в обновленном исходном коде.
# Необходимо установить библиотеку поддержки клиента Redis для языка Python.
RUN pip install Flask uWSGI requests redis
WORKDIR /app
COPY app /app
# Добавление файла скрипта в контейнер.
COPY cmd.sh /
# Использование инструкции EXPOSE для объявления портов, доступных для хоста и других контейнеров.
EXPOSE 9090 9191
# Определение имени пользователя uwsgi для всех последующих строк (включая CMD и ENTRYPOINT).
USER uwsgi
# Создание новой команды для запуска uWSGI.
# Здесь uWSGI получает указание запустить http-сервер,
# прослушивающий порт 9090 и инициализирующий приложение app из файла /app/identidock.py.
# Также инициализируется сервер наблюдения за состоянием с прослушиванием порта 9191.
# Другой способ замены команды CMD – передача соответствующих аргументов в команду docker run.
# CMD ["uwsgi", "--http", "0.0.0.0:9090", "--wsgi-file", "/app/identidock.py", \
# "--callable", "app", "--stats", "0.0.0.0:9191"]

#  Вызов скрипта из инструкции CMD.
CMD ["/cmd.sh"]